plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.1.11'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.flywaydb.flyway" version "10.15.2"
}

group = 'kg.arbocdi.builder'
version = '0.0.1-SNAPSHOT'
def logbackVersion = '1.3.7'
def axonVersion = '4.11.0'
def axonExtVersion='4.11.0'
def springCloudVersion="2022.0.5"

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
dependencies {
    api("org.axonframework:axon-spring-boot-starter:${axonVersion}"){
        exclude group: "org.axonframework", module: "axon-server-connector"
    }
    api 'com.github.kagkarlsson:db-scheduler-spring-boot-starter:14.0.1'
    api 'org.reflections:reflections:0.10.2'

    api 'io.hypersistence:hypersistence-utils-hibernate-62:3.7.6'


    api "org.axonframework.extensions.kafka:axon-kafka-spring-boot-starter:${axonExtVersion}"
    api("org.axonframework.extensions.springcloud:axon-springcloud-spring-boot-starter:${axonExtVersion}")
    api "org.axonframework:axon-micrometer:${axonVersion}"

    api 'commons-io:commons-io:2.16.1'
    api("org.springframework.boot:spring-boot-starter-actuator")
    api("org.springframework.boot:spring-boot-starter-json")
    api("org.springframework.boot:spring-boot-starter-web")
    api("org.springframework.boot:spring-boot-starter-data-jpa")
    //api("org.springframework.boot:spring-boot-starter-security")
    api("org.flywaydb:flyway-core")
    api("org.springframework.kafka:spring-kafka")
    api("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0")
    api("org.postgresql:postgresql")
    api("org.springframework.boot:spring-boot-starter-validation")
    api("io.micrometer:micrometer-registry-prometheus")
    api("org.springframework.cloud:spring-cloud-starter-consul-all:4.0.4")

    //implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.7.5'

    //logs
    api "ch.qos.logback:logback-classic:${logbackVersion}"
    api "ch.qos.logback:logback-core:${logbackVersion}"
    api "ch.qos.logback:logback-access:${logbackVersion}"
    api 'net.logstash.logback:logstash-logback-encoder:7.4'

    //lombok
    api "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation 'org.axonframework:axon-test:4.9.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "config.jar"
}

apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
